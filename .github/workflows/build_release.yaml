name: Build Release Binaries
on:
  release:
    types: [created]

jobs:
  windows_build:
    name: Windows Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable

      - name: Build
        run: cargo build --release --all-features

      - name: Test
        run: cargo test --release --all-features

      - name: Get latest release
        id: get_release
        uses: bruceadams/get-release@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/release/databind.exe
          asset_name: databind-win.exe
          asset_content_type: application/octet-stream

  macos_build:
    name: macOS Build
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable

      - name: Build
        run: cargo build --release --all-features

      - name: Test
        run: cargo test --release --all-features

      - name: Get latest release
        id: get_release
        uses: bruceadams/get-release@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/release/databind
          asset_name: databind-mac
          asset_content_type: application/octet-stream

  ubuntu_build:
    name: Ubuntu Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable

      - name: Build
        run: cargo build --release --all-features

      - name: Test
        run: cargo test --release --all-features

      - name: Get latest release
        id: get_release
        uses: bruceadams/get-release@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/release/databind
          asset_name: databind-linux
          asset_content_type: application/octet-stream
